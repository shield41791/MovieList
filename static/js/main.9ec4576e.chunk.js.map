{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","medium_cover_image","genres","to","pathname","state","className","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","console","log","setState","data","this","movie","React","Component","About","props","Detail","location","history","undefined","push","document","querySelector","setAttribute","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"8UA+CeA,MA1Cf,YAAwE,IAAxDC,EAAuD,EAAvDA,GAAIC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,mBAAoBC,EAAS,EAATA,OAC1D,OAEI,aADA,CACC,IAAD,CAAMC,GAAI,CACNC,SAAS,UAAD,OAAWP,GACnBQ,MAAO,CACHR,KACAC,OACAC,QACAC,UACAC,qBACAC,WARR,SAWI,sBAAKI,UAAU,QAAf,UACI,qBAAKC,IAAKN,EAAoBO,IAAKT,EAAOA,MAAOA,IACjD,sBAAKO,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAAyDP,IACzD,oBAAIO,UAAU,cAAd,SAA6BR,IAC7B,oBAAIQ,UAAU,gBAAd,SAEIJ,GACAA,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACP,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,QAGjB,mBAAGL,UAAU,iBAAb,SAA+BN,EAAQY,MAAM,EAAG,gBC0DrDC,G,kNAnFbR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAyBVC,U,sBAAY,4BAAAC,EAAA,sEAIWC,IAAMC,IAAI,6CAJrB,OAIJJ,EAJI,OAeVK,QAAQC,IAAIN,GAEZ,EAAKO,SAAS,CAACP,OAAQA,EAAOQ,KAAKA,KAAKR,OAAQD,WAAW,IAjBjD,2C,uDAXZ,WACEU,KAAKR,c,oBAmCP,WAIE,MAA4BQ,KAAKnB,MAA1BS,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,OAElB,OAAO,yBAAST,UAAU,YAAnB,SAEHQ,EACA,qBAAKR,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAEF,qBAAKA,UAAU,SAAf,SACGS,EAAON,KAAI,SAAAgB,GAAK,OACf,cAAC,EAAD,CAEE5B,GAAI4B,EAAM5B,GACVC,KAAM2B,EAAM3B,KACZC,MAAO0B,EAAM1B,MACbC,QAASyB,EAAMzB,QACfC,mBAAoBwB,EAAMxB,mBAC1BC,OAAQuB,EAAMvB,QANTuB,EAAM5B,e,GApEN6B,IAAMC,YCIVC,MAPf,SAAeC,GAIX,OAFAT,QAAQC,IAAIQ,GAEL,uFC+BIC,E,uKA7BX,WAAqB,IAAD,EAChB,EAA8BN,KAAKK,MAA3BE,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAEKC,IAAnBF,EAAS1B,OACT2B,EAAQE,KAAK,KAIjB,UAAAC,SAASC,cAAc,qCAAvB,SAAsDC,aAAa,UAAWN,EAAS1B,MAAMJ,sB,oBAIjG,WACI,IAAQ8B,EAAaP,KAAKK,MAAlBE,SACR,OAAIA,EAAS1B,MAEL,qCACI,8BACI,+BAAO0B,EAAS1B,MAAMN,UAE1B,qBAAKQ,IAAKwB,EAAS1B,MAAMJ,mBAAoBO,IAAKuB,EAAS1B,MAAMN,WAIlE,S,GAzBE2B,IAAMC,W,MCwBZW,MA3Bf,WACI,OACI,gCAUI,qBAAKhC,UAAU,QAAf,SACI,cAAC,IAAD,CAAMH,GAAG,IAAT,yBAEJ,qBAAKG,UAAU,MAAf,SAII,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CAAMH,GAAG,SAAT,2B,MCILoC,MApBf,WACE,OACE,eAAC,IAAD,WAEE,cAAC,EAAD,IASA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW7B,IACxC,cAAC,IAAD,CAAO2B,KAAK,SAASE,UAAWd,IAChC,cAAC,IAAD,CAAOY,KAAK,aAAaE,UAAWZ,QClB1Ca,IAASC,OAIP,cAAC,IAAMC,WAAP,UAAkB,cAAC,EAAD,MAA4BV,SAASW,eAAe,W","file":"static/js/main.9ec4576e.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({id, year, title, summary, medium_cover_image, genres}) {\n    return (\n        // 라우팅시 props 보내기\n        <Link to={{\n            pathname:`/movie/${id}`,\n            state: {\n                id, \n                year,\n                title,\n                summary,\n                medium_cover_image,\n                genres\n            }\n        }}>\n            <div className=\"movie\">\n                <img src={medium_cover_image} alt={title} title={title}/>\n                <div className=\"movie__data\">\n                    <h3 className=\"movie__title\" /*style={{color:\"blue\"}}*/>{title}</h3>\n                    <h5 className=\"movie__year\">{year}</h5>\n                    <ul className=\"movie__genres\">\n                        {\n                        genres && // undefined check\n                        genres.map((genre, index) => \n                            <li key={index} className=\"genres__genre\">{genre}</li>    \n                        )}\n                    </ul>\n                    <p className=\"movie__summary\">{summary.slice(0, 500)}</p>\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    medium_cover_image: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie.js\";\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  // ---------------------------------------------------------------------\n\n  // React 라이프사이클\n  // - Mounting(컴포넌트 생성)이 끝나면 componentDidMount() 함수 실행\n\n  // componentDidMount() {\n  //   setTimeout(() => {\n  //     this.setState({isLoading: false});\n  //   }, 1000);\n  // }\n\n  componentDidMount() {\n    this.getMovies();  \n    //console.log(\"componentDidMount\");\n  }\n\n  // ---------------------------------------------------------------------\n\n  // 비동기 함수\n  // - async : 동작이 완료될 때까지 기다림\n  // - await : 기다릴 대상\n\n  getMovies = async () => {\n    // axios로 API 호출\n\n    // 버전 1 (이게 더 쉬워 보이는데..?)\n    const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    //console.log(movies.data.data.movies);\n\n    // 버전 2 (ES6 문법)\n    // const {\n    //   data: {\n    //     data: {\n    //       movies\n    //     }\n    //   }\n    // } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    console.log(movies);\n\n    this.setState({movies: movies.data.data.movies, isLoading: false});\n  }\n\n  // ---------------------------------------------------------------------\n\n  // render()\n  // - 리액트는 자동으로(?) 모든 class component의 render 메소드를 실행\n\n  render()  {\n    //return <div>{this.state.isLoading ? \"Loading\" : \"We are ready\"}</div>;\n\n    // ES6 문법\n    const {isLoading, movies} = this.state;\n\n    return <section className=\"container\">\n      {\n        isLoading ? \n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div> : (\n        <div className=\"movies\">\n          {movies.map(movie => (\n            <Movie\n              key={movie.id}\n              id={movie.id}\n              year={movie.year}\n              title={movie.title}\n              summary={movie.summary}\n              medium_cover_image={movie.medium_cover_image}\n              genres={movie.genres}\n            />\n          ))}\n        </div>\n        )\n      }\n    </section>;\n  } //render()\n}\n\nexport default Home;","import React from \"react\";\n\nfunction About(props) {\n    // Router안의 모든 Route들은 props를 가짐\n    console.log(props);\n\n    return <span>About this page: I build it because I love movies.</span>;\n}\n\nexport default About;","import React from \"react\";\n\n// function Detail({location}) {\n//     console.log(location);\n//     return <span>Hello</span>;\n// }\n\nclass Detail extends React.Component {\n    componentDidMount() {\n        const { location, history } = this.props;\n        // 영화를 클릭하지 않고, 강제로 URL을 입력해서 간 경우 home으로 리다이렉트 \n        if (location.state === undefined) {\n            history.push(\"/\");\n        }\n        // console.log(location.state);\n        // twitter 카드용 메타태그 수정\n        document.querySelector('meta[name=\"twitter:image\"]')?.setAttribute('content', location.state.medium_cover_image)\n    }\n\n    // render()가 componentDidMount() 보다 먼저 실행되므로 여기도 예외처리 해야함.\n    render() {\n        const { location } = this.props;\n        if (location.state) {\n            return (\n                <>\n                    <div>\n                        <span>{location.state.title}</span>\n                    </div>\n                    <img src={location.state.medium_cover_image} alt={location.state.title} />\n                </>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default Detail;","import React from \"react\";\nimport \"./Navigation.css\";\nimport {Link} from \"react-router-dom\";\n\nfunction Navigation() {\n    return (\n        <nav>\n            {/* <a>태그의 href를 사용하면 페이지를 새로고침하므로 라우팅이 제대로 동작하지 않음*/}\n            {/* <a href=\"/\">Home</a> */}\n            {/* <a href=\"/about\">About</a> */}\n\n            {/* react-router-dom 의 Link 를 사용. href대신 to를 쓴다. */}\n            {/* 반드시 Router(<HashRouter>) 안에 있어야 함. */}\n            {/* <Link to=\"/\">Home</Link> */}\n            {/* <Link to=\"/about\">About</Link> */}\n\n            <div className=\"title\">\n                <Link to=\"/\">Movie App</Link>\n            </div>\n            <div className=\"nav\">\n                {/* <div className=\"nav__link\">\n                    <Link to=\"/\">Home</Link>\n                </div> */}\n                <div className=\"nav__link\">\n                    <Link to=\"/about\">About</Link>\n                </div>\n            </div>\n        </nav>  \n    );\n}\n\nexport default Navigation;","import React from \"react\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport Home from \"./routes/Home.js\";\nimport About from \"./routes/About.js\";\nimport Detail from \"./routes/Detail.js\";\nimport Navigation from \"./components/Navigation.js\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      {/* 1. 네비게이션 */}\n      <Navigation/>\n\n      {/* 2. 라우팅 */}\n      {/* Path -> 렌더링할 컴포넌트 */}\n      {/* /about 이면 /도 렌더링하고, /about도 렌더링한다. */}\n      {/* <Route path=\"/\"><h1>Home</h1></Route> */}\n      {/* <Route path=\"/about\"><h1>About</h1></Route> */}\n\n      {/* exact={true}이면 패스가 정확히 일치할때만(포함X) 렌더링한다. */}\n      <Route path=\"/\" exact={true} component={Home}/>\n      <Route path=\"/about\" component={About}/>\n      <Route path=\"/movie/:id\" component={Detail}/>\n    </HashRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import Potato from './Potato'; // X. 컴포넌트를 추가하려면 App.js 안에 넣어야 함.\n\nReactDOM.render(\n  // 이렇게는 할 수 없다. 리액트는 하나의 컴포넌트(App.js)만 렌더링하기 때문\n  //<React.StrictMode><App /><Potato /></React.StrictMode>, document.getElementById('root')\n  \n  <React.StrictMode><App /></React.StrictMode>, document.getElementById('root')\n);\n"],"sourceRoot":""}